using DSharpPlus;
using DSharpPlus.Entities;
using Discordia.Lib.Types;

namespace Discordia.Lib.Discord;

public static class ServerInteraction
{
    /// <exception cref="ArgumentException">If index is negative</exception>
    /// <exception cref="IndexOutOfRangeException">If <paramref name="index"/> is not present in the server list</exception>
    public static ServerInfo GetCompleteInfo(DiscordClient client, int index)
    {
        var basicInfo = GetBasicInfo(client, index);
        var rolesInfo = GetRolesInfo(client, index);
        var channelsInfo = GetChannelsInfo(client, index);
        var emotesInfo = GetEmotesInfo(client, index);
        var owner = client.Guilds.Values.ElementAt(index).Owner;
        return new ServerInfo(basicInfo, rolesInfo, channelsInfo, emotesInfo, owner);
    }


    /// <exception cref="IndexOutOfRangeException">If <paramref name="index"/> is not present in the server list</exception>
    /// <exception cref="ArgumentException">If index is negative</exception>
    public static BasicServerInfo GetBasicInfo(DiscordClient client, int index)
    {
        if(index < 0)
            throw new ArgumentException("Index cannot be negative");
        
        if(client.Guilds.Values.Count() <= index)
            throw new IndexOutOfRangeException("Index is not present in the server list");
        
        var server = client.Guilds.Values.ElementAt(index);
        var serverInfo = new BasicServerInfo(index, server.Name, server.Id,
            server.Description, server.IconUrl, server.Owner.Username,
            server.VoiceRegion.Name, server.MemberCount, server.Roles.Count,
            server.Channels.Count, server.Emojis.Count, server.IsNSFW);
        return serverInfo;
    }
    

    /// <exception cref="ArgumentException">If index is negative</exception>
    /// <exception cref="IndexOutOfRangeException">If <paramref name="index"/> is not present in the server list</exception>
    public static ServerRolesInfo GetRolesInfo(DiscordClient client, int index)
    {
        if(index < 0)
            throw new ArgumentException("Index cannot be negative");
        
        if(client.Guilds.Values.Count() <= index)
            throw new IndexOutOfRangeException("Index is not present in the server list");
        
        var server = client.Guilds.Values.ElementAt(index);
        var serverRoles = new ServerRolesInfo(server.Roles.Values.ToList(), server.EveryoneRole);
        return serverRoles;
    }


    /// <exception cref="ArgumentException">If index is negative</exception>
    /// <exception cref="IndexOutOfRangeException">If <paramref name="index"/> is not present in the server list</exception>
    public static ServerChannelsInfo GetChannelsInfo(DiscordClient client, int index)
    {
        if(index < 0)
            throw new ArgumentException("Index cannot be negative");
        
        if(client.Guilds.Values.Count() <= index)
            throw new IndexOutOfRangeException("Index is not present in the server list");
        
        var server = client.Guilds.Values.ElementAt(index);
        var serverChannels = new ServerChannelsInfo(server.Channels.Values.ToList(), server.SystemChannel, server.AfkChannel);
        return serverChannels;
    }
    

    /// <exception cref="ArgumentException">If index is negative</exception>
    /// <exception cref="IndexOutOfRangeException">If <paramref name="index"/> is not present in the server list</exception>
    public static ServerEmotesInfo GetEmotesInfo(DiscordClient client, int index)
    {
        if(index < 0)
            throw new ArgumentException("Index cannot be negative");
        
        if(client.Guilds.Values.Count() <= index)
            throw new IndexOutOfRangeException("Index is not present in the server list");
        
        var server = client.Guilds.Values.ElementAt(index);
        var serverEmotes = new ServerEmotesInfo(server.Emojis.Values.ToList());
        return serverEmotes;
    }
    
    

    /// <exception cref="ArgumentException">If index is negative</exception>
    /// <exception cref="IndexOutOfRangeException">If <paramref name="index"/> is not present in the server list</exception>
    public static BasicUserInfo GetOwnerInfo(DiscordClient client, int index)
    {
        if(index < 0)
            throw new ArgumentException("Index cannot be negative");
        
        if(client.Guilds.Values.Count() <= index)
            throw new IndexOutOfRangeException("Index is not present in the server list");
        
        var server = client.Guilds.Values.ElementAt(index);
        var owner = new BasicUserInfo(server.Owner.Id, server.Owner.Username, server.Owner.Discriminator, server.Owner.AvatarUrl);
        return owner;
    }
}