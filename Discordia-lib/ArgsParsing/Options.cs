using CommandLine;

namespace Discordia.Lib.ArgsParsing;

[Verb("server",HelpText = "Get Information about discord server and interact with them")]
public class ServerOptions
{
    #region List Command
    [Option("list", Group = "list", HelpText = "List servers")]
    public bool List { get; set; }
    
    [Option('c', "count",Group = "list", Default = int.MaxValue, HelpText = "Maximum number of servers to list")]
    public int MaxServerCount { get; set; }
    
    [Option("reverse",Group = "list", HelpText = "Reverse the order of the servers")]
    public bool Reverse { get; set; }
    #endregion

    
    #region Info Command
    [Option("info", Group = "info", HelpText = "Get information about a server, We recommend outputting the info to a file, specifically for the --all, --channels, --emotes and --members options")]
    public bool Info { get; set; }
    
    [Option('i', "index", Group = "info", Default = int.MaxValue, HelpText = "Specifies the index of the server to get information about")]
    public int Index { get; set; }

    //Parameters for what information to get about the server
    [Option("all", Group = "info", HelpText = "Append this parameter to get all information about the server")]
    public bool AllInfo { get; set; }
    
    [Option("basic", Group = "info", HelpText = "Append this parameter to get basic information about the server")]
    public bool BasicInfo { get; set; }
    
    [Option("roles", Group = "info", HelpText = "Append this parameter to get information about the roles of the server")]
    public bool RolesInfo { get; set; }
    
    [Option("channels", Group = "info", HelpText = "Append this parameter to get information about the channels of the server")]
    public bool ChannelsInfo { get; set; }
    
    [Option("emotes", Group = "info", HelpText = "Append this parameter to get information about the emotes of the server")]
    public bool EmotesInfo { get; set; }
    
    [Option("members", Group = "info", HelpText = "Append this parameter to get information about the members of the server")]
    public bool MembersInfo { get; set; }
    
    [Option("owner", Group = "info", HelpText = "Append this parameter to get information about the owner of the server")]
    public bool OwnerInfo { get; set; }
    #endregion
}